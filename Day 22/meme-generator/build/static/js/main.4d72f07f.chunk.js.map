{"version":3,"sources":["Components/Templates.jsx","Components/creds.js","Components/axios.js","Components/Meme.jsx","Components/Api.jsx","App.js","index.js"],"names":["Templates","props","className","data","map","template","onClick","setMeme","name","src","url","alt","Creds","axios","create","baseURL","username","password","Meme","meme","useState","template_id","id","font","boxes","form","setForm","newMeme","setNewMeme","genMeme","a","finalMemeReq","box","index","text","fetch","method","finalMeme","json","res","finalMemeTemplate","Array","box_count","el","type","placeholder","onChange","e","newBoxes","target","value","require","Api","setData","useEffect","get","response","info","memes","getData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA8BeA,MA9Bf,SAAmBC,GACjB,OACE,mCACE,qBAAKC,UAAU,YAAf,SACGD,EAAME,KAAKC,KAAI,SAACC,GACf,OACE,mCACE,qBAAKH,UAAU,UAAf,SACE,sBACEA,UAAU,YACVI,QAAS,WACPL,EAAMM,QAAQF,IAHlB,UAME,mBAAGH,UAAU,QAAb,SAAsBG,EAASG,OAC/B,qBACEN,UAAU,WACVO,IAAKJ,EAASK,IACdC,IAAKN,EAASG,sB,uBCbnBI,G,OCHCC,EAAMC,OAAO,CAC3BC,QAAS,0CDHG,CACZC,SAAU,aACVC,SAAU,mBEiEGC,EA9DF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMZ,EAAc,EAAdA,QACpB,EAAwBa,mBAAS,CAC/BC,YAAaF,EAAKG,GAClBN,SAAUJ,EAAMI,SAChBC,SAAUL,EAAMK,SAChBM,KAAM,QACNC,MAAO,KALT,mBAAOC,EAAP,KAAaC,EAAb,KAOA,EAA8BN,mBAAS,MAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAAO,uCAAG,kCAAAC,EAAA,6DACVC,EADU,uBACqBN,EAAKJ,YAD1B,qBACkDI,EAAKT,SADvD,qBAC4ES,EAAKR,UAC/FQ,EAAKD,MAAMpB,KAAI,SAAC4B,EAAKC,GACnBF,GAAY,iBAAcE,EAAd,mBAA8BD,EAAIE,SAHlC,SAMUC,MAAM,wCAAD,OACaJ,GACxC,CACEK,OAAQ,SATE,cAMRC,EANQ,gBAaEA,EAAUC,OAbZ,OAaVC,EAbU,OAcRC,EAAoBD,EAAIpC,KAAKO,IACnCkB,EAAWY,GAfG,4CAAH,qDAmBb,OACE,mCACE,sBAAKtC,UAAU,OAAf,UACE,qBAAIA,UAAU,SAAd,UAAwBiB,EAAKX,KAA7B,eACCmB,EACC,qBAAKlB,IAAKkB,EAAShB,IAAKQ,EAAKX,OAE7B,qBAAKC,IAAKU,EAAKT,IAAKC,IAAKQ,EAAKX,OAEhC,qBAAKN,UAAU,SAAf,SACG,YAAIuC,MAAMtB,EAAKuB,YAAYtC,KAAI,SAACuC,EAAIV,GACnC,OACE,uBAEEW,KAAK,OACLC,YAAW,kBAAaZ,EAAQ,GAChCa,SAAU,SAACC,GACT,IAAMC,EAAWvB,EAAKD,MACtBwB,EAASf,GAAS,CAAEC,KAAMa,EAAEE,OAAOC,OACnCxB,EAAQ,2BAAKD,GAAN,IAAYD,MAAOwB,OANvBf,QAYb,sBAAK/B,UAAU,UAAf,UACE,wBAAQI,QAASuB,EAAjB,yBACA,wBAAQvB,QAAS,kBAAMC,EAAQ,OAA/B,wCCzDJM,EAAQsC,EAAQ,GAwBPC,MAtBf,WACE,MAAwBhC,mBAAS,IAAjC,mBAAOjB,EAAP,KAAakD,EAAb,KACA,EAAwBjC,mBAAS,MAAjC,mBAAOD,EAAP,KAAaZ,EAAb,KASA,OARA+C,qBAAU,YACK,uCAAG,8BAAAxB,EAAA,sEACSjB,EAAM0C,IAAI,qCADnB,OACRC,EADQ,OAERC,EAAOD,EAASrD,KAAKA,KAAKuD,MAChCL,EAAQI,GAHM,2CAAH,qDAKbE,KACC,IAED,mCACY,OAATxC,EACC,cAAC,EAAD,CAAWhB,KAAMA,EAAMI,QAASA,IAEhC,cAAC,EAAD,CAAMY,KAAMA,EAAMZ,QAASA,OCVpBqD,MARf,WACE,OACE,qBAAK1D,UAAU,MAAf,SACE,cAAC,EAAD,OCDN2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d72f07f.chunk.js","sourcesContent":["function Templates(props) {\r\n  return (\r\n    <>\r\n      <div className=\"templates\">\r\n        {props.data.map((template) => {\r\n          return (\r\n            <>\r\n              <div className=\"wrapper\">\r\n                <div\r\n                  className=\"container\"\r\n                  onClick={() => {\r\n                    props.setMeme(template);\r\n                  }}\r\n                >\r\n                  <p className=\"title\">{template.name}</p>\r\n                  <img\r\n                    className=\"meme-img\"\r\n                    src={template.url}\r\n                    alt={template.name}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Templates;\r\n","const Creds = {\r\n  username: \"stillwater\",\r\n  password: \"1234stillwater\",\r\n};\r\n\r\nexport default Creds;\r\n","import axios from \"axios\";\r\n\r\nconst getMeme = axios.create({\r\n  baseURL: \"https://api.imgflip.com/caption_image\",\r\n});\r\n\r\nexport default getMeme;\r\n","import axios from \"./axios\";\r\nimport { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport Creds from \"./creds\";\r\n\r\nconst Meme = ({ meme, setMeme }) => {\r\n  const [form, setForm] = useState({\r\n    template_id: meme.id,\r\n    username: Creds.username,\r\n    password: Creds.password,\r\n    font: \"arial\",\r\n    boxes: [],\r\n  });\r\n  const [newMeme, setNewMeme] = useState(null);\r\n  const genMeme = async () => {\r\n    let finalMemeReq = `?template_id=${form.template_id}&username=${form.username}&password=${form.password}`;\r\n    form.boxes.map((box, index) => {\r\n      finalMemeReq += `&boxes[${index}][text]=${box.text}`;\r\n    });\r\n    // const finalMeme = await axios.post(finalMemeReq);\r\n    const finalMeme = await fetch(\r\n      `https://api.imgflip.com/caption_image${finalMemeReq}`,\r\n      {\r\n        method: \"POST\",\r\n      }\r\n    );\r\n\r\n    let res = await finalMeme.json();\r\n    const finalMemeTemplate = res.data.url;\r\n    setNewMeme(finalMemeTemplate);\r\n\r\n    // console.log(finalMeme);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"meme\">\r\n        <h1 className=\"header\">{meme.name} Template</h1>\r\n        {newMeme ? (\r\n          <img src={newMeme} alt={meme.name} />\r\n        ) : (\r\n          <img src={meme.url} alt={meme.name} />\r\n        )}\r\n        <div className=\"inputs\">\r\n          {[...Array(meme.box_count)].map((el, index) => {\r\n            return (\r\n              <input\r\n                key={index}\r\n                type=\"text\"\r\n                placeholder={`Caption ${index + 1}`}\r\n                onChange={(e) => {\r\n                  const newBoxes = form.boxes;\r\n                  newBoxes[index] = { text: e.target.value };\r\n                  setForm({ ...form, boxes: newBoxes });\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button onClick={genMeme}>Create Meme</button>\r\n          <button onClick={() => setMeme(null)}>Back To Templates</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Meme;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Templates from \"./Templates\";\r\nimport Meme from \"./Meme\";\r\nconst axios = require(\"axios\");\r\n\r\nfunction Api() {\r\n  const [data, setData] = useState([]);\r\n  const [meme, setMeme] = useState(null);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const response = await axios.get(\"https://api.imgflip.com/get_memes\");\r\n      const info = response.data.data.memes;\r\n      setData(info);\r\n    };\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {meme === null ? (\r\n        <Templates data={data} setMeme={setMeme} />\r\n      ) : (\r\n        <Meme meme={meme} setMeme={setMeme} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Api;\r\n","import \"./App.css\";\nimport Api from \"./Components/Api\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Api />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}